Executing query: 11 (11.OUT)
*** Optimizer Start ***
*** Begin search for loop 0 ***
=== trying table 0 with isOptimal=1 ===
Recomputing index info for PARTSUPP...
xBestIndex for PARTSUPP
  constraint[0]: col=1 termid=0 op=2 usabled=1
  orderby[0]: col=0 desc=0

Table: PARTSUPP
Number of constraints: 1
Cons# 0	Use: True	Col: PS_SUPPKEY	Op: =
Number of orders: 1
Order# 0	Col: PS_PARTKEY	Asc: True
Constraint(s) supported on column: PS_SUPPKEY
Order not supported
Estimated cost: 80

  usage[0]: argvIdx=1 omit=1
  idxNum=2
  idxStr=
  orderByConsumed=0
  estimatedCost=80
=== trying table 1 with isOptimal=1 ===
Recomputing index info for SUPPLIER...
xBestIndex for SUPPLIER
  constraint[0]: col=3 termid=1 op=2 usabled=1
  constraint[1]: col=0 termid=4 op=2 usabled=1

Table: SUPPLIER
Number of constraints: 2
Cons# 0	Use: True	Col: S_NATIONKEY	Op: =
Cons# 1	Use: True	Col: S_SUPPKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: S_NATIONKEY
Order not supported
Estimated cost: 1

  usage[0]: argvIdx=1 omit=1
  usage[1]: argvIdx=0 omit=0
  idxNum=4
  idxStr=
  orderByConsumed=0
  estimatedCost=1
=== trying table 2 with isOptimal=1 ===
Recomputing index info for NATION...
xBestIndex for NATION
  constraint[0]: col=1 termid=2 op=2 usabled=1
  constraint[1]: col=0 termid=3 op=2 usabled=1

Table: NATION
Number of constraints: 2
Cons# 0	Use: True	Col: N_NAME	Op: =
Cons# 1	Use: True	Col: N_NATIONKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: N_NAME
Order not supported
Estimated cost: 1

  usage[0]: argvIdx=1 omit=1
  usage[1]: argvIdx=0 omit=0
  idxNum=2
  idxStr=
  orderByConsumed=0
  estimatedCost=1
=== table 2 is best so far with cost=2 and nRow=0
*** Optimizer selects table 2 for loop 0 with cost=2 and nRow=0
*** Begin search for loop 1 ***
=== trying table 0 with isOptimal=1 ===
xBestIndex for PARTSUPP
  constraint[0]: col=1 termid=0 op=2 usabled=1

Table: PARTSUPP
Number of constraints: 1
Cons# 0	Use: True	Col: PS_SUPPKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: PS_SUPPKEY
Order not supported
Estimated cost: 80

  usage[0]: argvIdx=1 omit=1
  idxNum=2
  idxStr=
  orderByConsumed=0
  estimatedCost=80
=== trying table 1 with isOptimal=1 ===
xBestIndex for SUPPLIER
  constraint[0]: col=3 termid=1 op=2 usabled=1
  constraint[1]: col=0 termid=4 op=2 usabled=1

Table: SUPPLIER
Number of constraints: 2
Cons# 0	Use: True	Col: S_NATIONKEY	Op: =
Cons# 1	Use: True	Col: S_SUPPKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: S_NATIONKEY
Order not supported
Estimated cost: 1

  usage[0]: argvIdx=1 omit=1
  usage[1]: argvIdx=0 omit=0
  idxNum=4
  idxStr=
  orderByConsumed=0
  estimatedCost=1
=== table 1 is best so far with cost=1 and nRow=0
*** Optimizer selects table 1 for loop 1 with cost=1 and nRow=0
*** Begin search for loop 2 ***
=== trying table 0 with isOptimal=1 ===
xBestIndex for PARTSUPP
  constraint[0]: col=1 termid=0 op=2 usabled=1

Table: PARTSUPP
Number of constraints: 1
Cons# 0	Use: True	Col: PS_SUPPKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: PS_SUPPKEY
Order not supported
Estimated cost: 80

  usage[0]: argvIdx=1 omit=1
  idxNum=2
  idxStr=
  orderByConsumed=0
  estimatedCost=80
=== table 0 is best so far with cost=80 and nRow=0
*** Optimizer selects table 0 for loop 2 with cost=80 and nRow=0
*** Optimizer Finished ***
*** Optimizer Start ***
*** Begin search for loop 0 ***
=== trying table 0 with isOptimal=1 ===
Recomputing index info for PARTSUPP...
xBestIndex for PARTSUPP
  constraint[0]: col=1 termid=0 op=2 usabled=1

Table: PARTSUPP
Number of constraints: 1
Cons# 0	Use: True	Col: PS_SUPPKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: PS_SUPPKEY
Order not supported
Estimated cost: 80

  usage[0]: argvIdx=1 omit=1
  idxNum=2
  idxStr=
  orderByConsumed=0
  estimatedCost=80
=== trying table 1 with isOptimal=1 ===
Recomputing index info for SUPPLIER...
xBestIndex for SUPPLIER
  constraint[0]: col=3 termid=1 op=2 usabled=1
  constraint[1]: col=0 termid=4 op=2 usabled=1

Table: SUPPLIER
Number of constraints: 2
Cons# 0	Use: True	Col: S_NATIONKEY	Op: =
Cons# 1	Use: True	Col: S_SUPPKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: S_NATIONKEY
Order not supported
Estimated cost: 1

  usage[0]: argvIdx=1 omit=1
  usage[1]: argvIdx=0 omit=0
  idxNum=4
  idxStr=
  orderByConsumed=0
  estimatedCost=1
=== trying table 2 with isOptimal=1 ===
Recomputing index info for NATION...
xBestIndex for NATION
  constraint[0]: col=1 termid=2 op=2 usabled=1
  constraint[1]: col=0 termid=3 op=2 usabled=1

Table: NATION
Number of constraints: 2
Cons# 0	Use: True	Col: N_NAME	Op: =
Cons# 1	Use: True	Col: N_NATIONKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: N_NAME
Order not supported
Estimated cost: 1

  usage[0]: argvIdx=1 omit=1
  usage[1]: argvIdx=0 omit=0
  idxNum=2
  idxStr=
  orderByConsumed=0
  estimatedCost=1
=== table 2 is best so far with cost=1 and nRow=0
*** Optimizer selects table 2 for loop 0 with cost=1 and nRow=0
*** Begin search for loop 1 ***
=== trying table 0 with isOptimal=1 ===
xBestIndex for PARTSUPP
  constraint[0]: col=1 termid=0 op=2 usabled=1

Table: PARTSUPP
Number of constraints: 1
Cons# 0	Use: True	Col: PS_SUPPKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: PS_SUPPKEY
Order not supported
Estimated cost: 80

  usage[0]: argvIdx=1 omit=1
  idxNum=2
  idxStr=
  orderByConsumed=0
  estimatedCost=80
=== trying table 1 with isOptimal=1 ===
xBestIndex for SUPPLIER
  constraint[0]: col=3 termid=1 op=2 usabled=1
  constraint[1]: col=0 termid=4 op=2 usabled=1

Table: SUPPLIER
Number of constraints: 2
Cons# 0	Use: True	Col: S_NATIONKEY	Op: =
Cons# 1	Use: True	Col: S_SUPPKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: S_NATIONKEY
Order not supported
Estimated cost: 1

  usage[0]: argvIdx=1 omit=1
  usage[1]: argvIdx=0 omit=0
  idxNum=4
  idxStr=
  orderByConsumed=0
  estimatedCost=1
=== table 1 is best so far with cost=1 and nRow=0
*** Optimizer selects table 1 for loop 1 with cost=1 and nRow=0
*** Begin search for loop 2 ***
=== trying table 0 with isOptimal=1 ===
xBestIndex for PARTSUPP
  constraint[0]: col=1 termid=0 op=2 usabled=1

Table: PARTSUPP
Number of constraints: 1
Cons# 0	Use: True	Col: PS_SUPPKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: PS_SUPPKEY
Order not supported
Estimated cost: 80

  usage[0]: argvIdx=1 omit=1
  idxNum=2
  idxStr=
  orderByConsumed=0
  estimatedCost=80
=== table 0 is best so far with cost=80 and nRow=0
*** Optimizer selects table 0 for loop 2 with cost=80 and nRow=0
*** Optimizer Finished ***

0|0|2|SCAN TABLE nation VIRTUAL TABLE INDEX 2: (~0 rows)|
0|1|1|SCAN TABLE supplier VIRTUAL TABLE INDEX 4: (~0 rows)|
0|2|0|SCAN TABLE partsupp VIRTUAL TABLE INDEX 2: (~0 rows)|
0|0|0|USE TEMP B-TREE FOR GROUP BY|
0|0|0|EXECUTE SCALAR SUBQUERY 1|
1|0|2|SCAN TABLE nation VIRTUAL TABLE INDEX 2: (~0 rows)|
1|1|1|SCAN TABLE supplier VIRTUAL TABLE INDEX 4: (~0 rows)|
1|2|0|SCAN TABLE partsupp VIRTUAL TABLE INDEX 2: (~0 rows)|
0|0|0|USE TEMP B-TREE FOR ORDER BY|
||||