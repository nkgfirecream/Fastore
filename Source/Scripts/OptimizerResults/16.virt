Executing query: 16 (16.OUT)
*** Optimizer Start ***
*** Begin search for loop 0 ***
=== trying table 0 with isOptimal=1 ===
Recomputing index info for PARTSUPP...
xBestIndex for PARTSUPP
  constraint[0]: col=0 termid=5 op=2 usabled=1

Table: PARTSUPP
Number of constraints: 1
Cons# 0	Use: True	Col: PS_PARTKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: PS_PARTKEY
Order not supported
Estimated cost: 4

  usage[0]: argvIdx=1 omit=1
  idxNum=1
  idxStr=
  orderByConsumed=0
  estimatedCost=4
=== trying table 1 with isOptimal=1 ===
Recomputing index info for PART...
xBestIndex for PART
  constraint[0]: col=0 termid=0 op=2 usabled=1
  orderby[0]: col=3 desc=0
  orderby[1]: col=4 desc=0
  orderby[2]: col=5 desc=0

Table: PART
Number of constraints: 1
Cons# 0	Use: True	Col: P_PARTKEY	Op: =
Number of orders: 3
Order# 0	Col: P_BRAND	Asc: True
Order# 1	Col: P_TYPE	Asc: True
Order# 2	Col: P_SIZE	Asc: True
Constraint(s) supported on column: P_PARTKEY
Order not supported
Estimated cost: 1

  usage[0]: argvIdx=1 omit=1
  idxNum=1
  idxStr=
  orderByConsumed=0
  estimatedCost=1
=== trying table 0 with isOptimal=0 ===
xBestIndex for PARTSUPP
  constraint[0]: col=0 termid=5 op=2 usabled=0

Table: PARTSUPP
Number of constraints: 1
Cons# 0	Use: False	Col: PS_PARTKEY	Op: =
Number of orders: 0
Constraint not supported
Order not supported
Estimated cost: 800

  usage[0]: argvIdx=0 omit=0
  idxNum=0
  idxStr=
  orderByConsumed=0
  estimatedCost=800
=== table 0 is best so far with cost=3200 and nRow=0
=== trying table 1 with isOptimal=0 ===
xBestIndex for PART
  constraint[0]: col=0 termid=0 op=2 usabled=0
  orderby[0]: col=3 desc=0
  orderby[1]: col=4 desc=0
  orderby[2]: col=5 desc=0

Table: PART
Number of constraints: 1
Cons# 0	Use: False	Col: P_PARTKEY	Op: =
Number of orders: 3
Order# 0	Col: P_BRAND	Asc: True
Order# 1	Col: P_TYPE	Asc: True
Order# 2	Col: P_SIZE	Asc: True
Constraint not supported
Order not supported
Estimated cost: 200

  usage[0]: argvIdx=0 omit=0
  idxNum=0
  idxStr=
  orderByConsumed=0
  estimatedCost=200
=== table 1 is best so far with cost=800 and nRow=0
*** Optimizer selects table 1 for loop 0 with cost=800 and nRow=0
*** Begin search for loop 1 ***
=== trying table 0 with isOptimal=1 ===
xBestIndex for PARTSUPP
  constraint[0]: col=0 termid=5 op=2 usabled=1

Table: PARTSUPP
Number of constraints: 1
Cons# 0	Use: True	Col: PS_PARTKEY	Op: =
Number of orders: 0
Constraint(s) supported on column: PS_PARTKEY
Order not supported
Estimated cost: 4

  usage[0]: argvIdx=1 omit=1
  idxNum=1
  idxStr=
  orderByConsumed=0
  estimatedCost=4
=== table 0 is best so far with cost=4 and nRow=0
*** Optimizer selects table 0 for loop 1 with cost=4 and nRow=0
*** Optimizer Finished ***
*** Optimizer Start ***
*** Begin search for loop 0 ***
=== trying table 0 with isOptimal=0 ===
Recomputing index info for SUPPLIER...
xBestIndex for SUPPLIER

Table: SUPPLIER
Number of constraints: 0
Number of orders: 0
Constraint not supported
Order not supported
Estimated cost: 10

  idxNum=0
  idxStr=
  orderByConsumed=0
  estimatedCost=10
=== table 0 is best so far with cost=10 and nRow=0
*** Optimizer selects table 0 for loop 0 with cost=10 and nRow=0
*** Optimizer Finished ***

0|0|1|SCAN TABLE part VIRTUAL TABLE INDEX 0: (~0 rows)|
0|0|0|EXECUTE LIST SUBQUERY 1|
0|1|0|SCAN TABLE partsupp VIRTUAL TABLE INDEX 1: (~0 rows)|
0|0|0|EXECUTE LIST SUBQUERY 1|
1|0|0|SCAN TABLE supplier VIRTUAL TABLE INDEX 0: (~0 rows)|
0|0|0|USE TEMP B-TREE FOR GROUP BY|
0|0|0|USE TEMP B-TREE FOR ORDER BY|
||||